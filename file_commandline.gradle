task testFileOperate(group: 'bga') {
    doLast {
        copy {
            from file("$rootDir/config.gradle") // 文件或文件夹
            into buildDir // 只能是文件夹
        }
    }

    doLast {
//        delete "$buildDir/config.gradle"
    }

    doLast {
        fileTree(buildDir) { FileTree fileTree ->
            fileTree.visit { FileTreeElement fileTreeElement ->
                println "fileTree 递归遍历 $fileTreeElement.name"
            }
        }
    }

    doLast {
        "cp $rootDir/config.gradle $buildDir/config2.gradle".execute()
    }

    doLast {
        exec {
            try {
                executable 'bash'
                args '-c', 'ls build'
            } catch (GradleException e) {
                e.printStackTrace()
            }
        }
    }

    doLast {
        exec {
            try {
                executable 'ls'
                args '.gradle'
            } catch (GradleException e) {
                e.printStackTrace()
            }
        }
    }

    doLast {
        exec {
            commandLine 'ls', 'gradle'
        }
    }

    doLast {
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                commandLine 'git', 'rev-parse', '--short', 'HEAD'
                standardOutput = os
            }
            println "${result} commitId is ${os.toString().trim()}"
        }
    }

    doLast {
        println "commitId is ${"git rev-parse --short HEAD".execute().text.trim()}"
    }
}