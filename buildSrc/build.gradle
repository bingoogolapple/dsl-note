apply plugin: 'groovy' // 插件基于 groovy 编写，需要依赖 groovy 插件

def isNotStandalone = project.parent != null
def isDebugPlugin = false

if (isNotStandalone) {
    isDebugPlugin = DEBUG_PLUGIN
} else {
    Properties props = new Properties()
    props.load(rootProject.file('../gradle.properties').newDataInputStream())
    isDebugPlugin = props.getProperty('DEBUG_PLUGIN')

    repositories {
        maven {
            url uri("${System.properties['user.home']}/.gradle/local_repo")
        }
        google()
        jcenter()
    }
}
println "是否非独立 ${isNotStandalone}，是否调试 ${isDebugPlugin}，是否发布 ${hasProperty('publishAar')}"


dependencies {
    // 查看源码时，在 AS 右上角提示中选择「用户主目录/.gradle/wrapper/dists/gradle-版本号-all/hash值/gradle-版本号/src」
    compile gradleApi()
    //groovy sdk
    compile localGroovy()

    implementation 'com.android.tools.build:gradle:3.2.1'
    
    implementation 'org.javassist:javassist:3.24.0-GA'
    implementation 'commons-io:commons-io:2.6'

    implementation 'org.aspectj:aspectjtools:1.9.2'

    compileOnly 'com.google.android:android:4.1.1.4'
}

if (isNotStandalone) {
    dependencies {
        if (Boolean.valueOf(isDebugPlugin)) {
            println "直接依赖 common 模块"
            implementation project.project(':common')
        } else {
            println "依赖发布后 common 库"
            implementation "com.sankuai.erp.component:appinit-common:${VERSION_NAME}"
        }
    }
} else {
    println "依赖 common 模块源码"
    sourceSets {
        main {
            java.srcDirs += "${project.rootDir.parent}/common/src/main/java"
        }
    }
}

// ./gradlew :buildSrc:clean :buildSrc:build :buildSrc:uploadArchives -PpublishAar
apply from: 'https://raw.githubusercontent.com/bingoogolapple/PublishAar/master/local-release.gradle'